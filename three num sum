def threeSum(nums):
    l1 = []
    l2 = []
    r = []
    for i in nums:
        if i>0:
            l1.append(i)
        elif i<0:
            l2.append(i)
    if 0 in nums:
        for s in l1:
            for t in l2:
                if s+t == 0:
                    if [s,t,0] not in r:
                        r.append([s,t,0])
    dic = {}
    for i in nums:
        dic[i] = dic.get(i,0) + 1
    if dic.get(0,0)>=3:
        r.append([0,0,0])
    for p in range(len(l1)-1):
        for q in range(p+1,len(l1)):
            if dic.get(-(l1[p]+l1[q]),0) != 0:
                if [l1[p],l1[q],-(l1[p]+l1[q])] not in r and [l1[q],l1[p],-(l1[p]+l1[q])] not in r:
                    r.append([l1[p],l1[q],-(l1[p]+l1[q])])
    for p in range(len(l2)-1):
        for q in range(p+1,len(l2)):
            if dic.get(-(l2[p]+l2[q]),0) != 0:
                if [l2[p],l2[q],-(l2[p]+l2[q])] not in r and [l2[q],l2[p],-(l2[p]+l2[q])] not in r:
                    r.append([l2[p],l2[q],-(l2[p]+l2[q])])
    return r
print(threeSum([0,0,0]))

def threeSum(nums):
        ans = []
        n = len(nums)
        nums.sort()
        for i in range(n):
            left = i + 1
            right = n - 1
            if nums[i] > 0:
                break
            if i >= 1 and nums[i] == nums[i - 1]:
                continue
            while left < right:
                total = nums[i] + nums[left] + nums[right]
                if total > 0:
                    right -= 1
                elif total < 0:
                    left += 1
                else:
                    ans.append([nums[i], nums[left], nums[right]])
                    while left != right and nums[left] == nums[left + 1]: left += 1
                    while left != right and nums[right] == nums[right - 1]: right -= 1
                    left += 1
                    right -= 1
        return ans
